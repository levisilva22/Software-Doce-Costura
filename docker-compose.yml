version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://api_gateway:8000/api
      - NODE_ENV=development
    restart: unless-stopped
    networks:
      - public_network
    depends_on:
      - api_gateway

  api_gateway:
    build: ./api_gateway
    container_name: api_gateway
    ports:
      - "8000:8000"
    volumes:
      - ./api_gateway:/app
    restart: always
    networks:
      - public_network
      - internal_network

  auth_service:
    build: ./auth_service
    container_name: auth_service
    ports:
      - "8001:8001"  
    volumes:
      - ./auth_service:/app
    depends_on:
      - auth_db
    restart: always
    networks:
      - public_network
      - internal_network
  
  recommendation_service:
    build: ./recommendation_service
    container_name: recommendation_service
    ports:
      - "8002:8000"  # Mapeando para porta 8002 externamente
    environment:
      - DEBUG=False
      - SECRET_KEY=${RECOMMENDATION_SECRET_KEY}
      - ALLOWED_HOSTS=localhost,127.0.0.1,api_gateway,recommendation_service
      - DB_HOST=recommendation_db
      - DB_NAME=recommendation_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - recommendation_db
    restart: always
    networks:
      - internal_network

  main_service:
    build: ./DoceCostura
    container_name: main_service
    ports:
      - "8003:8000"  # Mapeando porta 8003 externamente para 8000 internamente
    environment:
      - DEBUG=False
      - SECRET_KEY=${MAIN_SERVICE_SECRET_KEY}
      - ALLOWED_HOSTS=localhost,127.0.0.1,api_gateway,main_service
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=docecostura_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=docecostura_db
      - DB_PORT=5432
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - MERCADOPAGO_PUBLIC_KEY=${MERCADOPAGO_PUBLIC_KEY}
      - MERCADOPAGO_ACCESS_TOKEN=${MERCADOPAGO_ACCESS_TOKEN}
      - PAGHIPER_API_KEY=${PAGHIPER_API_KEY}
      - PAGHIPER_TOKEN=${PAGHIPER_TOKEN}
    depends_on:
      - docecostura_db
    restart: always
    volumes:
      - ./DoceCostura/media:/app/media
      - ./DoceCostura/static:/app/static
      - ./DoceCostura/logs:/app/logs
    networks:
      - public_network
      - internal_network

  auth_db:
    image: postgres:14
    container_name: auth_db
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - internal_network

  recommendation_db:
    image: postgres:14
    container_name: recommendation_db
    environment:
      - POSTGRES_DB=recommendation_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - recommendation_db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - internal_network

  docecostura_db:
    image: postgres:14
    container_name: docecostura_db
    environment:
      - POSTGRES_DB=docecostura_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - docecostura_db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - internal_network
  
volumes:
  auth_db_data:
  recommendation_db_data:
  docecostura_db_data:

networks:
  public_network:
    driver: bridge
  internal_network:
    driver: bridge
